
module jcarrylookaheadadder(Y,carryout,A,B,carryin);

  output [3:0] Y;
  output carryout;
  input  [3:0] A,B;
  input  carryin;
  wire [3:0] g,p;
  wire [4:0] c;

  assign c[0] = carryin;
  assign Y[0] = (~(A[0] ^ B[0]) & c[0]) | ((~c[0] & A[0]) ^ (B[0] & ~c[0]));
  assign c[1] = (((A[0] & B[0]) | (B[0] & ~A[0])) | (~B[0] & A[0])) & ((A[0] & B[0]) | c[0]);
  assign Y[1] = ((~(B[1] ^ A[1]) | ~c[1]) & c[1]) | (~c[1] & (B[1] ^ A[1]));
  assign c[2] = ((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | ((A[0] ^ B[0]) & (B[1] ^ A[1]))) & ((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | c[0]);
  assign Y[2] = (c[2] & ~((~A[2] & B[2]) | (~B[2] & A[2]))) | ((~c[2] & B[2]) ^ (~c[2] & A[2]));
  assign c[3] = ((B[2] | ((((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | ((A[0] ^ B[0]) & (B[1] ^ A[1]))) & ((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | c[0])) & ((~A[2] & B[2]) | (~B[2] & A[2])))) & A[2]) | ((((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | ((A[0] ^ B[0]) & (B[1] ^ A[1]))) & ((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | c[0])) & ((~A[2] & B[2]) | (~B[2] & A[2])));
  assign Y[3] = ((~c[3] | (c[3] & ~((B[3] & ~A[3]) | (~B[3] & A[3])))) & c[3]) | (~c[3] & ((B[3] & ~A[3]) | (~B[3] & A[3])));
  assign c[4] = (A[0] & B[0]) | ((((((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | ((A[0] ^ B[0]) & (B[1] ^ A[1]))) & ((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | c[0])) | ((B[2] & A[2]) & (A[0] ^ B[0]))) & (B[0] & (A[2] | (~A[2] & B[2])))) ^ (((((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | ((A[0] ^ B[0]) & (B[1] ^ A[1]))) & ((((B[1] & A[1]) | B[0]) & ((B[1] & A[1]) | (((A[1] & A[0]) & ~(B[1] & A[0])) | (~(A[1] & A[0]) & (B[1] & A[0]))))) | c[0])) | ((B[2] & A[2]) & (A[0] ^ B[0]))) & ((A[2] | (~A[2] & B[2])) & A[0])));
  assign carryout = c[4];
endmodule

