
module add(a,b,c,g,p,s);

  input  a,b,c;
  output g,p,s;

  assign s = ((((~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a)))) & c) | a) & ((~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a)))) & c) | (~c & ~b))) | ((~(c & ((((b | (~b & (~b & a))) | ((~b & a) & ~a)) | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & ((~c | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & (a & ~c)))) & (c & ((((b | (~b & (~b & a))) | ((~b & a) & ~a)) | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & ((~c | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & (b & ~c))))) | ((c & ((((b | (~b & (~b & a))) | ((~b & a) & ~a)) | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & ((~c | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & (a & ~c)))) & ~(c & ((((b | (~b & (~b & a))) | ((~b & a) & ~a)) | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & ((~c | ~((b & (((b | (~b & (~b & a))) | ((~b & a) & ~a)) & ~a)) | (~b & ((b | (~b & (~b & a))) | ((~b & a) & ~a))))) & (b & ~c))))))) | (~a & (b & ~c));
  assign g = b & a;
  assign p = (b | (~b & (~b & a))) | ((~b & a) & ~a);
endmodule

