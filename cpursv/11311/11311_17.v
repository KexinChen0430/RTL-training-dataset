
module Problem1(input  A,
                input  B,
                input  C,
                input  D,
                output reg X,
                output reg Y);

  
  always @(A or B or C or D)
      begin
        if (!((((~(A & C) | C) & (A | ~(A & C))) & ((~(B & D) | ~(A & C)) & ((~(B & D) | ~(A & C)) & (A & C)))) ^ (((~(A & C) | C) & (A | ~(A & C))) & ((~(B & D) | ~(A & C)) & (((B & D) & (~(A & C) | (C & ~(B & D)))) & (A | ~(A & C)))))) == 1) X = 1;
        else if ((((!(B & D) | ~!(B & D)) & ((((~C & C) | ~(C & ((D & (~C & C)) | (B & ~C)))) & (~(C & ((D & (~C & C)) | (B & ~C))) | (((D & ~B) | (B & ~C)) | D))) & ((((~!(B & D) & ((C & D) | (B & C))) | ~(C & ((D & (~C & C)) | (B & ~C)))) & (~C | ~(C & ((D & (~C & C)) | (B & ~C))))) & ((!(B & D) & ((((~!(B & D) & ((C & D) | (B & C))) | ~(C & ((D & (~C & C)) | (B & ~C)))) & (~C | ~(C & ((D & (~C & C)) | (B & ~C))))) & (C | ~(C & ((D & (~C & C)) | (B & ~C)))))) & (~(C & ((D & (~C & C)) | (B & ~C))) | (~C & ((~C | B) & (D | B)))))))) ^ ((!(B & D) | ~!(B & D)) & ((((~C & C) | ~(C & ((D & (~C & C)) | (B & ~C)))) & (~(C & ((D & (~C & C)) | (B & ~C))) | (((D & ~B) | (B & ~C)) | D))) & ((((~!(B & D) & ((C & D) | (B & C))) | ~(C & ((D & (~C & C)) | (B & ~C)))) & (~C | ~(C & ((D & (~C & C)) | (B & ~C))))) & (((((~!(B & D) & ((C & D) | (B & C))) | ~(C & ((D & (~C & C)) | (B & ~C)))) & (~C | ~(C & ((D & (~C & C)) | (B & ~C))))) & (~C & C)) & ((D & (~C & C)) | B)))))) == 1) X = 1;
        else X = 0;
        if (!(~C & A) == 1) Y = 1;
        else if (((~((D | ~B) & ((~A | A) & ((D | ~B) & (D & (B & C))))) & ((D | ~B) & ((~A | A) & ((D | ~B) & ((D & A) & C))))) | (((D | ~B) & ((~A | A) & ((D | ~B) & (D & (B & C))))) & ~((D | ~B) & ((~A | A) & ((D | ~B) & ((D & A) & C)))))) == 1) Y = 1;
        else if ((D & (A | (D & ~B))) == 1) Y = 1;
        else Y = 0;
      end
endmodule

