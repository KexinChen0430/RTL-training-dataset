
module FA(A,B,C,F);

  input  A,B,C;
  output F;

  assign F = (((~((~A & ((B | (~A & (~B & A))) | (~B & A))) | (~B & A)) & C) | (B & ~A)) | (~B & A)) & (((~((~A & ((B | (~A & (~B & A))) | (~B & A))) | (~B & A)) | (((~C & (~B & A)) & ((((~((~A & ((B | (~A & (~B & A))) | (~B & A))) | (~B & A)) & C) | (B & ~A)) | (~B & A)) & (~C & B))) & ~(((((~((~A & ((B | (~A & (~B & A))) | (~B & A))) | (~B & A)) & C) | (B & ~A)) | (~B & A)) & (~C & A)) & (~C & (~B & A))))) | ((((((~((~A & ((B | (~A & (~B & A))) | (~B & A))) | (~B & A)) & C) | (B & ~A)) | (~B & A)) & (~C & A)) & (~C & (~B & A))) & ~((~C & (~B & A)) & ((((~((~A & ((B | (~A & (~B & A))) | (~B & A))) | (~B & A)) & C) | (B & ~A)) | (~B & A)) & (~C & B))))) | ~C);
endmodule

