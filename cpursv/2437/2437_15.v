
module alu181(input  [3:0] a,b,
              input  m,
              input  c_,
              input  [3:0] s,
              output [3:0] f,
              output g,p,
              output co_,
              output eq);

  wire [3:0]  s0 = {4{s[0]}};
  wire [3:0]  s1 = {4{s[1]}};
  wire [3:0]  s2 = {4{s[2]}};
  wire [3:0]  s3 = {4{s[3]}};
  wire [3:0] 
       u = ~(((((~b & s2) & a) | (s1 & ~b)) | a) | ((s0 & (b & ((a | ~b) | ((a | b) & s0)))) | ((~b & s2) & a)));
  wire [3:0] 
       v = ~((s3 | ((~b & s2) & a)) & ((b | ((~b & s2) & a)) & a));
  wire [3:0]  w = (u | (v & ~u)) & ((v & ~u) | ~v);
  wire [3:0] z;

  assign z[0] = ~(c_ & ~m);
  assign z[1] = ~((v[0] | (u[0] & ~m)) & ((u[0] & ~m) | (c_ & ~m)));
  assign z[2] = ~(((v[1] | u[1]) & ~m) & (((v[1] & v[0]) & c_) | (u[1] | u[0])));
  assign z[3] = ~((((v[1] & ~m) & (((v[2] & u[1]) | (v[2] & u[0])) | u[2])) | ((v[0] & (v[1] & (~m & v[2]))) | ((u[2] | u[1]) & (~m & ((u[2] | ((u[0] & v[1]) & v[2])) | v[2]))))) & ((((v[2] & u[0]) & (((((v[1] & v[0]) & c_) & v[2]) | (((((u[2] | ((u[0] & v[1]) & v[2])) | v[2]) & (u[1] & (((v[2] & u[1]) | (v[2] & u[0])) | u[2]))) | ((v[1] & v[2]) & v[0])) | v[1])) | u[2])) | (u[2] | c_)) | (((u[2] | ((u[0] & v[1]) & v[2])) | v[2]) & (u[1] & (((v[2] & u[1]) | (v[2] & u[0])) | u[2])))));
  assign g = ~((((v[2] & u[1]) & v[3]) | (u[3] | (u[2] & v[3]))) | ((u[2] & v[3]) | (v[1] & ((u[0] & v[3]) & v[2]))));
  assign p = ~&v;
  wire  g2 = ~(c_ & &v);

  assign co_ = ~g2 | ~g;
  assign f = (~z & w) | (~w & z);
  assign eq = &f;
endmodule

