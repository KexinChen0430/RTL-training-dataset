
module Problem4(input  A,
                input  B,
                input  C,
                input  D,
                input  E,
                output X);

  assign X = (E | ((~C & D) & (~A & ~B))) & (((~D & B) & (A & C)) | (((((B & A) & (E & (D & C))) | ((((((((~B & A) & E) & (~D & ~C)) | ((((E & ~D) & C) & (B & ~A)) | ((((B & D) & (~A & ~C)) | ((E & (~C & (~D & (B & ~A)))) | (((~C & D) & (~A & ~B)) | ((((D & ~B) & ~A) & C) | (((~B & C) & ~A) & (E & ~D)))))) & (((B & D) & (~A & ~C)) | (E | ((~C & D) & (~A & ~B))))))) & (E | ((~C & D) & (~A & ~B)))) | (~C & (~B & A))) | ((((~B & A) & E) & D) & C)) & (((((~B & A) & E) & D) & C) | (D | (((((~B & A) & E) & (~D & ~C)) | ((((E & ~D) & C) & (B & ~A)) | ((((B & D) & (~A & ~C)) | ((E & (~C & (~D & (B & ~A)))) | (((~C & D) & (~A & ~B)) | ((((D & ~B) & ~A) & C) | (((~B & C) & ~A) & (E & ~D)))))) & (((B & D) & (~A & ~C)) | (E | ((~C & D) & (~A & ~B))))))) & (E | ((~C & D) & (~A & ~B)))))))) & ((E | ((~C & D) & (~A & ~B))) | E)) & (E | ((~C & D) & (~A & ~B)))));
endmodule

