
module Problem4(input  A,
                input  B,
                input  C,
                input  D,
                input  E,
                output X);

  assign X = (((((A & D) & (B & C)) | ((((((D & E) & ((A & ~C) & ~B)) | ((E & (~B & (~D & (A & ~C)))) | ((((((~A & E) & (C & ~B)) | (~E | ((D & ~A) & ((~C & E) & ~B)))) & ((((~A & ((C & ~B) & D)) & E) | (D & (~C & (~B & ~A)))) | (E & ~D))) & ((((~A & ((C & ~B) & D)) & E) | (D & (~C & (~B & ~A)))) | ((~B & ~A) & C))) | ((((E & ~A) & ~C) & B) | (~A & ((~D & B) & C)))))) & (E | ((C & (~A & (~B & ~D))) | (D & (~C & (~B & ~A)))))) & ((((~C & (~B & ~A)) | E) & (E | (D & ~E))) | E)) | (((~D & B) & ((E & C) & A)) | (((C & ~B) & D) & A)))) & (((A & D) & (B & C)) | (((~C & (~B & ~A)) | E) & (E | (D & ~E))))) & ((((~C & (~B & ~A)) | E) & (E | (D & ~E))) | E)) & (E | ((((((D & E) & ((A & ~C) & ~B)) | ((E & (~B & (~D & (A & ~C)))) | ((((((~A & E) & (C & ~B)) | (~E | ((D & ~A) & ((~C & E) & ~B)))) & ((((~A & ((C & ~B) & D)) & E) | (D & (~C & (~B & ~A)))) | (E & ~D))) & ((((~A & ((C & ~B) & D)) & E) | (D & (~C & (~B & ~A)))) | ((~B & ~A) & C))) | ((((E & ~A) & ~C) & B) | (~A & ((~D & B) & C)))))) & (E | ((C & (~A & (~B & ~D))) | (D & (~C & (~B & ~A)))))) & ((((~C & (~B & ~A)) | E) & (E | (D & ~E))) | E)) | (((B & A) & (~D & C)) | (E & (((C & ~B) & D) & A)))));
endmodule

