
module Problem4(input  A,
                input  B,
                input  C,
                input  D,
                input  E,
                output X);

  assign X = ((((((A & B) & E) & (C & ~D)) | ((((((A & (~B & ~D)) & (E & ~C)) | (((((((C & ~D) | ((D & ~B) & (~C & ~A))) & (~A & ~B)) | (((E & D) | (((~C & (B & ~A)) & ~D) & E)) & ((((~C & (B & ~A)) & ~D) & E) | (~B & (C & ~A))))) & ((((~E | E) & ((~A & (~B & ~C)) | E)) & (E | (~E & D))) | (((E & D) | (((~C & (B & ~A)) & ~D) & E)) & ((((~C & (B & ~A)) & ~D) & E) | (~B & (C & ~A)))))) | ((C & ~A) & (~D & B))) | ((~A & D) & ((~C & B) & E)))) & ((((~A & D) & ((~C & B) & E)) | (((D & ~B) & (~C & ~A)) | (((~C & (B & ~A)) & ~D) | (((C & ~B) & E) & ~A)))) | E)) & ((((~E | E) & ((~A & (~B & ~C)) | E)) & (E | (~E & D))) | E)) | ((((A & ~C) & ~B) & (E & D)) | ((A & ~B) & (C & D))))) | ((E & B) & ((C & D) & A))) & ((((~E | E) & ((~A & (~B & ~C)) | E)) & (E | (~E & D))) | E)) & ((((~A & D) & ((~C & B) & E)) | (((D & ~B) & (~C & ~A)) | (((~C & (B & ~A)) & ~D) | (((C & ~B) & E) & ~A)))) | E);
endmodule

