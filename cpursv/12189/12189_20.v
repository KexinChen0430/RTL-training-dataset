
module Problem4(input  A,
                input  B,
                input  C,
                input  D,
                input  E,
                output X);

  assign X = ((((E & B) & (A & (D & C))) | (((((~D & (~C & (~B & A))) | ((~C & D) & (E & (~B & A)))) | (((((E & C) & (B & (~A & ~D))) | (((((E & ~A) & (C & ~B)) | (~D & (B & (~C & ~A)))) | (~B & (D & (~C & ~A)))) | (((~A & D) & B) & (~C & E)))) & (E | ((~B & (D & (~C & ~A))) | E))) & (E | ((((~A & C) & (~B & ~D)) & E) | ((~B & (D & (~C & ~A))) | ((~A & (~B & D)) & C)))))) & ((~B & (D & (~C & ~A))) | E)) | (((~D & C) & (A & B)) | ((C & ((A & D) & ~B)) & E)))) & (E | ((~B & (D & (~C & ~A))) | E))) & ((((E & C) & (~D & (A & B))) | (((((~D & (~C & (~B & A))) | ((~C & D) & (E & (~B & A)))) | (((((E & C) & (B & (~A & ~D))) | (((((E & ~A) & (C & ~B)) | (~D & (B & (~C & ~A)))) | (~B & (D & (~C & ~A)))) | (((~A & D) & B) & (~C & E)))) & (E | ((~B & (D & (~C & ~A))) | E))) & (E | ((((~A & C) & (~B & ~D)) & E) | ((~B & (D & (~C & ~A))) | ((~A & (~B & D)) & C)))))) & ((~B & (D & (~C & ~A))) | E)) | (C & ((A & D) & ~B)))) | E);
endmodule

