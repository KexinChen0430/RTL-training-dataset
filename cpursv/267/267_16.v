
module ALU(A,B,ZF,OF,F,ALU_OP);

  input  [1<<<1:0] ALU_OP;
  input  [31:0] A,B;
  output reg [31:0] F;
  output reg ZF,OF;
  reg  C32;

  
  always @(*)
      begin
        case (ALU_OP)

          3'd0: begin
                F = B & A;
                OF = 0;
              end

          3'd1: begin
                F = B | A;
                OF = 0;
              end

          3'd2: begin
                F = (((A & ~B) | B) & ~A) | (A & ~B);
                OF = 0;
              end

          3'd3: begin
                F = ~(B | A);
                OF = 0;
              end

          3'd4: begin
                {C32,F} = A+B;
                OF = ((C32 & (~(F[31] & ~C32) & (((~C32 & B[31]) & (~B[31] | ~A[31])) | (A[31] & (~B[31] & ~C32))))) | (C32 & (~(((((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))) | ~(~F[31] & A[31])) & ((B[31] & ~F[31]) | (((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))))) | ((F[31] & ~C32) & ~(((~C32 & B[31]) & (~B[31] | ~A[31])) | (A[31] & (~B[31] & ~C32))))))) ^ ((((F[31] & ((~C32 & ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31])))) | (~F[31] & ~C32))) | ((~(((((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))) | ~(~F[31] & A[31])) & ((B[31] & ~F[31]) | (((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))))) | (~C32 & (~A[31] & (B[31] & ~F[31])))) | ((A[31] & (~B[31] & ~C32)) & ~F[31]))) & (A[31] & (~F[31] & ~(B[31] & ~F[31])))) | (((F[31] & ((~C32 & ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31])))) | (~F[31] & ~C32))) | ((~(((((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))) | ~(~F[31] & A[31])) & ((B[31] & ~F[31]) | (((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))))) | (~C32 & (~A[31] & (B[31] & ~F[31])))) | ((A[31] & (~B[31] & ~C32)) & ~F[31]))) & ((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31]) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))));
              end

          3'd5: begin
                {C32,F} = A-B;
                OF = ((C32 & (~(F[31] & ~C32) & (((~C32 & B[31]) & (~B[31] | ~A[31])) | (A[31] & (~B[31] & ~C32))))) | (C32 & (~(((((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))) | ~(~F[31] & A[31])) & ((B[31] & ~F[31]) | (((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))))) | ((F[31] & ~C32) & ~(((~C32 & B[31]) & (~B[31] | ~A[31])) | (A[31] & (~B[31] & ~C32))))))) ^ ((((F[31] & ((~C32 & ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31])))) | (~F[31] & ~C32))) | ((~(((((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))) | ~(~F[31] & A[31])) & ((B[31] & ~F[31]) | (((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))))) | (~C32 & (~A[31] & (B[31] & ~F[31])))) | ((A[31] & (~B[31] & ~C32)) & ~F[31]))) & (A[31] & (~F[31] & ~(B[31] & ~F[31])))) | (((F[31] & ((~C32 & ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31])))) | (~F[31] & ~C32))) | ((~(((((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))) | ~(~F[31] & A[31])) & ((B[31] & ~F[31]) | (((~(B[31] & ~F[31]) & A[31]) | (~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31])) & (((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) | ~(B[31] & ~F[31])) & ((~F[31] & A[31]) | ~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))))) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))))) | (~C32 & (~A[31] & (B[31] & ~F[31])))) | ((A[31] & (~B[31] & ~C32)) & ~F[31]))) & ((~((~A[31] & B[31]) | (A[31] & (~B[31] | ~A[31]))) & F[31]) | ((B[31] & ~F[31]) & ~(~F[31] & A[31])))));
              end

          3'd6: begin
                F = (A < B) ? 32'd1 : 32'd0;
                OF = 0;
              end

          3'd7: begin
                F = (1<<<1**A)*B;
                OF = 0;
              end

          default: begin
                F = A;
                OF = 0;
              end

        endcase

        ZF = (F == 32'd0) ? 1'b1 : 1'b0;
      end
endmodule

