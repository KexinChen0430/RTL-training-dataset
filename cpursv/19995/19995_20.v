
module ADD(input  a,
           input  b,
           input  c,
           output g,
           output p,
           output s);

  assign s = (((b & ((~(~c & a) & ~c) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a))))) | ((c & ~((~a & b) | (a & (~b & (b | a))))) | ((c & ((~c & a) & ((((c & ~((~a & b) | (a & (~b & (b | a))))) | ~b) & ((c & ~((~a & b) | (a & (~b & (b | a))))) | a)) | (((~a & b) | (c & ~((~a & b) | (a & (~b & (b | a)))))) | (~b & b))))) ^ (c & ((b & ~c) & ((((c & ~((~a & b) | (a & (~b & (b | a))))) | ~b) & ((c & ~((~a & b) | (a & (~b & (b | a))))) | a)) | (((~a & b) | (c & ~((~a & b) | (a & (~b & (b | a)))))) | (~b & b)))))))) | (~((((~c & a) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a)))) & ~(b & ~c)) & (((~c & a) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a)))) & ((((c & ~((~a & b) | (a & (~b & (b | a))))) | ~b) & ((c & ~((~a & b) | (a & (~b & (b | a))))) | a)) | (((~a & b) | (c & ~((~a & b) | (a & (~b & (b | a)))))) | (~b & b))))) & ((((~c & a) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a)))) & ~(b & ~c)) & (((((c & ~((~a & b) | (a & (~b & (b | a))))) | ~b) & ((c & ~((~a & b) | (a & (~b & (b | a))))) | a)) | (((~a & b) | (c & ~((~a & b) | (a & (~b & (b | a)))))) | (~b & b))) & ((~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a))) & (b & ~c)))))) | (((((~c & a) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a)))) & ~(b & ~c)) & (((~c & a) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a)))) & ((((c & ~((~a & b) | (a & (~b & (b | a))))) | ~b) & ((c & ~((~a & b) | (a & (~b & (b | a))))) | a)) | (((~a & b) | (c & ~((~a & b) | (a & (~b & (b | a)))))) | (~b & b))))) & ~((((~c & a) & (~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a)))) & ~(b & ~c)) & (((((c & ~((~a & b) | (a & (~b & (b | a))))) | ~b) & ((c & ~((~a & b) | (a & (~b & (b | a))))) | a)) | (((~a & b) | (c & ~((~a & b) | (a & (~b & (b | a)))))) | (~b & b))) & ((~c | (~((~a & b) | (a & (~b & (b | a)))) | ((b & ~c) & ~a))) & (b & ~c)))));
  assign g = a & b;
  assign p = b | a;
endmodule

