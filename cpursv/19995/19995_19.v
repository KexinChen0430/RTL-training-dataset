
module ADD(input  a,
           input  b,
           input  c,
           output g,
           output p,
           output s);

  assign s = (((c & ~(a ^ b)) | (((((((((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b))) & (~c & b)) & (((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b)))) & (a & ~c)) ^ ((((a & ~c) & (((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b)))) & (((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b)))) & (a & ~c))) & c) & ~(((~c & b) ^ ((a & ~c) & (~c & b))) & c))) | ((((~c & b) ^ ((a & ~c) & (~c & b))) & c) & ~((((((((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b))) & (~c & b)) & (((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b)))) & (a & ~c)) ^ ((((a & ~c) & (((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b)))) & (((((~b & ~c) | ~(a ^ b)) & (a | ~(a ^ b))) | ((a & ~c) & ~b)) | ((((~a & b) | (~b & b)) | ~b) & (~c & b)))) & (a & ~c))) & c))) | (((~c & ~(~c & b)) & a) | ((~c & b) & ~(a & ~c)));
  assign g = b & a;
  assign p = (~a & b) | a;
endmodule

