
module f12_TECH_XOR5(input  [4:0] in,
                     output out);

  assign out = ((~((((~(((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) ^ in[2]) | ((((~((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) | ~in[2]) & ~in[3]) & in[2]) | (~in[3] & (~in[2] & ((~in[1] & in[0]) | ((in[1] & ~in[2]) & ~in[0])))))) | ((in[3] & ~in[3]) | (~(((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) ^ in[2]) & in[3]))) & (((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) ^ in[2])) ^ (((~(((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) ^ in[2]) | ((((~((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) | ~in[2]) & ~in[3]) & in[2]) | (~in[3] & (~in[2] & ((~in[1] & in[0]) | ((in[1] & ~in[2]) & ~in[0])))))) | ((in[3] & ~in[3]) | (~(((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) ^ in[2]) & in[3]))) & in[3])) | ~in[4]) & (((~(((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) ^ in[2]) & in[3]) & ~in[4]) | in[4])) | ((((~((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) | ~in[2]) & ~in[3]) & ~in[4]) & ((in[2] | (((~((~in[0] | ~in[1]) & ((in[1] | in[0]) & (in[0] | ~in[0]))) | ~in[2]) & (~in[2] & ~in[0])) | ((in[0] & ~in[2]) & ~in[1]))) & (in[1] | (in[2] | (~in[1] & in[0])))));
endmodule

