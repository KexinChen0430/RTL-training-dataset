module rom(
           PC,
           inst,
		   clk);
parameter DATA_WIDTH= 32;
`ifdef PROGRAM_1
	parameter PROG_LENGTH= 16;
`endif
input [DATA_WIDTH-1:0] PC;
input clk;
output [DATA_WIDTH-1:0] inst;
reg [DATA_WIDTH-1:0] inst;
always @(posedge clk)
begin
case(PC)
`ifdef PROGRAM_1
	32'h0000_0000 : inst<= 32'b111001_00000_00000_1111111111111111;
	32'h0000_0004: inst<= 32'b111010_00000_00000_1111111111111111;
	32'h0000_0008: inst<= 32'b111001_00001_00000_0000000000000000;
	32'h0000_000c: inst<= 32'b111010_00001_00000_0000000000000000;
	32'h0000_0010: inst<= 32'b111001_00010_00000_0000000000000010;
	32'h0000_0014: inst<= 32'b111010_00010_00000_0000000000000000;
	32'h0000_0018: inst<= 32'b010010_00011_00000_00010_00000000000;
	32'h0000_001c: inst<= 32'b111100_00011_00000_0000000000000101;
	32'h0000_0020: inst<= 32'b111011_00001_00000_0000000000000101;
	32'h0000_0024: inst<= 32'b110010_00000_00000_0000000000000001;
	32'h0000_0028: inst<= 32'b010111_11111_00000_00001_00000000000;
	32'h0000_002c: inst<= 32'b100001_11111_00000_1111111111111101;
	32'h0000_0030: inst<= 32'b000001_00000000000000000000001111;
	32'h0000_0034: inst<= 32'b111001_00000_00000_1111111111111111;
	32'h0000_0038: inst<= 32'b111010_00000_00000_1111111111111111;
	32'h0000_003c: inst<= 32'b110011_00000_00000_0000000000000001;
`endif
	default: inst<= 0; 
endcase
end
endmodule