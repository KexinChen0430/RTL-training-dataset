module picorv32 #(
    parameter [ 0:0] ENABLE_COUNTERS = 1,          
    parameter [ 0:0] ENABLE_COUNTERS64 = 1,        
    parameter [ 0:0] ENABLE_REGS_16_31 = 1,        
    parameter [ 0:0] ENABLE_REGS_DUALPORT = 1,     
    parameter [ 0:0] LATCHED_MEM_RDATA = 0,        
    parameter [ 0:0] TWO_STAGE_SHIFT = 1,          
    parameter [ 0:0] BARREL_SHIFTER = 0,           
    parameter [ 0:0] TWO_CYCLE_COMPARE = 0,        
    parameter [ 0:0] TWO_CYCLE_ALU = 0,            
    parameter [ 0:0] COMPRESSED_ISA = 0,           
    parameter [ 0:0] CATCH_MISALIGN = 1,           
    parameter [ 0:0] CATCH_ILLINSN = 1,            
    parameter [ 0:0] ENABLE_PCPI = 0,              
    parameter [ 0:0] ENABLE_MUL = 0,               
    parameter [ 0:0] ENABLE_FAST_MUL = 0,          
    parameter [ 0:0] ENABLE_DIV = 0,               
    parameter [ 0:0] ENABLE_IRQ = 0,               
    parameter [ 0:0] ENABLE_IRQ_QREGS = 1,         
    parameter [ 0:0] ENABLE_IRQ_TIMER = 1,         
    parameter [ 0:0] ENABLE_TRACE = 0,             
    parameter [ 0:0] REGS_INIT_ZERO = 0,           
    parameter [31:0] MASKED_IRQ = 32'h0000_0000,   
    parameter [31:0] LATCHED_IRQ = 32'hffff_ffff,  
    parameter [31:0] PROGADDR_RESET = 32'h0000_0000, 
    parameter [31:0] PROGADDR_IRQ = 32'h0000_0010, 
    parameter [31:0] STACKADDR = 32'hffff_ffff     
) (
    input clk, resetn,                             
    output reg trap,                               
    output reg        mem_valid,                   
    output reg        mem_instr,                   
    input             mem_ready,                   
    output reg [31:0] mem_addr,                    
    output reg [31:0] mem_wdata,                   
    output reg [ 3:0] mem_wstrb,                   
    input      [31:0] mem_rdata,                   
    output            mem_la_read,                 
    output            mem_la_write,                
    output     [31:0] mem_la_addr,                 
    output reg [31:0] mem_la_wdata,                
    output reg [ 3:0] mem_la_wstrb,                
    output reg        pcpi_valid,                  
    output reg [31:0] pcpi_insn,                   
    output     [31:0] pcpi_rs1,                    
    output     [31:0] pcpi_rs2,                    
    input             pcpi_wr,                     
    input      [31:0] pcpi_rd,                     
    input             pcpi_wait,                   
    input             pcpi_ready,                  
    input      [31:0] irq,                         
    output reg [31:0] eoi,                         
`ifdef RISCV_FORMAL
    output reg        rvfi_valid,                  
    output reg [63:0] rvfi_order,                  
    output reg [31:0] rvfi_insn,                   
    output reg        rvfi_trap,                   
    output reg        rvfi_halt,                   
    output reg        rvfi_intr,                   
    output reg [ 4:0] rvfi_rs1_addr,               
    output reg [ 4:0] rvfi_rs2_addr,               
    output reg [31:0] rvfi_rs1_rdata,              
    output reg [31:0] rvfi_rs2_rdata,              
    output reg [ 4:0] rvfi_rd_addr,                
    output reg [31:0] rvfi_rd_wdata,               
    output reg [31:0] rvfi_pc_rdata,               
    output reg [31:0] rvfi_pc_wdata,               
    output reg [31:0] rvfi_mem_addr,               
    output reg [ 3:0] rvfi_mem_rmask,              
    output reg [ 3:0] rvfi_mem_wmask,              
    output reg [31:0] rvfi_mem_rdata,              
    output reg [31:0] rvfi_mem_wdata,              
`endif
    output reg        trace_valid,                 
    output reg [35:0] trace_data                   
);
endmodule