module ada_idex_stage(
    input               clk,                    
    input               rst,                    
    input       [4:0]   id_exu_operation,       
    input       [31:0]  id_exu_port_a,          
    input       [31:0]  id_exu_port_b,          
    input       [31:0]  id_mem_store_data,      
    input               id_mem_write,           
    input               id_mem_read,            
    input               id_mem_byte,            
    input               id_mem_halfword,        
    input               id_mem_sign_ext,        
    input               id_mem_exu_mem_select,  
    input       [4:0]   id_gpr_wa,              
    input               id_gpr_we,              
    input               id_kernel_mode,         
    input       [31:0]  id_pc_current,          
    input               id_ex_can_exc,          
    input               id_mem_can_exc,         
    input               id_flush,               
    input               id_stall,               
    input               ex_stall,               
    output  reg [4:0]   ex_exu_operation,       
    output  reg [31:0]  ex_exu_port_a,          
    output  reg [31:0]  ex_exu_port_b,          
    output  reg [31:0]  ex_mem_store_data,      
    output  reg         ex_mem_write,           
    output  reg         ex_mem_read,            
    output  reg         ex_mem_byte,            
    output  reg         ex_mem_halfword,        
    output  reg         ex_mem_sign_ext,        
    output  reg         ex_mem_exu_mem_select,  
    output  reg [4:0]   ex_gpr_wa,              
    output  reg         ex_gpr_we,              
    output  reg         ex_kernel_mode,         
    output  reg [31:0]  ex_pc_current,          
    output  reg         ex_ex_can_exc,          
    output  reg         ex_mem_can_exc          
    );
    always @(posedge clk) begin
    end
endmodule