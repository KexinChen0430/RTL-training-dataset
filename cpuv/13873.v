module translation_altera 
#(
  parameter C_PCI_DATA_WIDTH = 128 
  )
(
 input                          CLK, 
 input                          RST_IN, 
 input [C_PCI_DATA_WIDTH-1:0]   RX_ST_DATA, 
 input [0:0]                    RX_ST_EOP, 
 input [0:0]                    RX_ST_SOP, 
 input [0:0]                    RX_ST_VALID, 
 output                         RX_ST_READY, 
 input [0:0]                    RX_ST_EMPTY, 
 output [C_PCI_DATA_WIDTH-1:0]  TX_ST_DATA, 
 output [0:0]                   TX_ST_VALID, 
 input                          TX_ST_READY, 
 output [0:0]                   TX_ST_EOP, 
 output [0:0]                   TX_ST_SOP, 
 output [0:0]                   TX_ST_EMPTY, 
 input [`SIG_CFG_CTL_W-1:0]     TL_CFG_CTL, 
 input [`SIG_CFG_ADD_W-1:0]     TL_CFG_ADD, 
 input [`SIG_CFG_STS_W-1:0]     TL_CFG_STS, 
 input [`SIG_FC_CPLH_W-1:0]     KO_CPL_SPC_HEADER, 
 input [`SIG_FC_CPLD_W-1:0]     KO_CPL_SPC_DATA, 
 input                          APP_MSI_ACK, 
 output                         APP_MSI_REQ, 
 output [C_PCI_DATA_WIDTH-1:0]  RX_TLP, 
 output                         RX_TLP_VALID, 
 output                         RX_TLP_START_FLAG, 
 output [`SIG_OFFSET_W-1:0]     RX_TLP_START_OFFSET, 
 output                         RX_TLP_END_FLAG, 
 output [`SIG_OFFSET_W-1:0]     RX_TLP_END_OFFSET, 
 output [`SIG_BARDECODE_W-1:0]  RX_TLP_BAR_DECODE, 
 input                          RX_TLP_READY, 
 output                         TX_TLP_READY, 
 input [C_PCI_DATA_WIDTH-1:0]   TX_TLP, 
 input                          TX_TLP_VALID, 
 input                          TX_TLP_START_FLAG, 
 input [`SIG_OFFSET_W-1:0]      TX_TLP_START_OFFSET, 
 input                          TX_TLP_END_FLAG, 
 input [`SIG_OFFSET_W-1:0]      TX_TLP_END_OFFSET, 
 output [`SIG_CPLID_W-1:0]      CONFIG_COMPLETER_ID, 
 output                         CONFIG_BUS_MASTER_ENABLE, 
 output [`SIG_LINKWIDTH_W-1:0]  CONFIG_LINK_WIDTH, 
 output [`SIG_LINKRATE_W-1:0]   CONFIG_LINK_RATE, 
 output [`SIG_MAXREAD_W-1:0]    CONFIG_MAX_READ_REQUEST_SIZE, 
 output [`SIG_MAXPAYLOAD_W-1:0] CONFIG_MAX_PAYLOAD_SIZE, 
 output                         CONFIG_INTERRUPT_MSIENABLE, 
 output                         CONFIG_CPL_BOUNDARY_SEL, 
 output [`SIG_FC_CPLD_W-1:0]    CONFIG_MAX_CPL_DATA, 
 output [`SIG_FC_CPLH_W-1:0]    CONFIG_MAX_CPL_HDR, 
 output                         INTR_MSI_RDY, 
 input                          INTR_MSI_REQUEST 
 );